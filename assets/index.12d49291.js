var W=Object.defineProperty,J=Object.defineProperties;var z=Object.getOwnPropertyDescriptors;var $=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,Z=Object.prototype.propertyIsEnumerable;var D=(n,e,t)=>e in n?W(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,C=(n,e)=>{for(var t in e||(e={}))_.call(e,t)&&D(n,t,e[t]);if($)for(var t of $(e))Z.call(e,t)&&D(n,t,e[t]);return n},w=(n,e)=>J(n,z(e));var x=(n,e,t)=>(D(n,typeof e!="symbol"?e+"":e,t),t);import{j as o,T as Q,a,b as V,r as g,R as F,c as X,O as ee,P as T,I as j,C as H,d as E,D as te,e as I,f as se,g as ae,B as y,M as N,F as f,A as le,s as ne,N as q,h as U,i as O,k as R,l as re,m as ie}from"./vendor.60c76cb4.js";const de=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))s(l);new MutationObserver(l=>{for(const r of l)if(r.type==="childList")for(const d of r.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&s(d)}).observe(document,{childList:!0,subtree:!0});function t(l){const r={};return l.integrity&&(r.integrity=l.integrity),l.referrerpolicy&&(r.referrerPolicy=l.referrerpolicy),l.crossorigin==="use-credentials"?r.credentials="include":l.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(l){if(l.ep)return;l.ep=!0;const r=t(l);fetch(l.href,r)}};de();function B(n,e){return n.reduce(function(t,s){return(t[e(s)]=t[e(s)]||[]).push(s),t},{})}function G(n){let e=n.slice();if(typeof e!="undefined"&&e.length>0){let t=e[0].slice(0,4);for(let s=1;s<e.length;s++)e[s].slice(0,4)==t?e[s]=e[s].slice(5):t=e[s].slice(0,4);return"Prereqs: "+e.join(" & ")}return""}function M(n){let e=n.slice(1).match(/.{1,2}/g).map(t=>Number.parseInt(t,16));return e[0]*.299+e[1]*.587+e[2]*.114>186}function L(n,e){if(n===e)return 0;let[t,s]=n.split("-"),[l,r]=e.split("-");if(parseInt(s)>parseInt(r))return-1;const d=["Fall","Spring","Summer"];return t=d.indexOf(t),l=d.indexOf(l),s===r&&t>l?-1:1}function Y(n){return o(Q,{className:"custom-toggle-buttons",type:"checkbox",name:"takenOrPlannedSelection"+n.uniqueKey,value:n.checked,onChange:n.handleButtonChange,children:[a(V,{id:"tbg-btn-1"+n.uniqueKey,value:"Taken",variant:"outline-success",size:"sm",children:"Taken"}),a(V,{id:"tbg-btn-2"+n.uniqueKey,value:"Planned",variant:"outline-warning",size:"sm",children:"Planned"})]})}function oe(n){const[e,t]=g.exports.useState([n.checked]);return o("tr",{children:[o("td",{className:"courses",children:[a(Y,{checked:e,handleButtonChange:l=>{let r=l.filter(d=>!e.includes(d));r.length===1?r[0]=="Taken"?n.takenFunc():n.plannedFunc():e[0]=="Taken"?n.takenFunc():n.plannedFunc(),t(r)},uniqueKey:n.uniqueKey}),n.Id?n.Id:" "," ",n.Name?n.Name:" "]}),a("td",{className:"credits",children:n.Credits?n.Credits.slice(0,1):" "}),a("td",{className:"notes",children:n.Prereqs?G(n.Prereqs):" "})]})}class ce extends F.Component{constructor(e){super(e);this.state={expandedRows:[]}}handleRowClick(e){const t=this.state.expandedRows,l=t.includes(e)?t.filter(r=>r!==e):t.concat(e);this.setState({expandedRows:l})}renderItem(e){let[t,s]=e,l=this.state.expandedRows.includes(t),r=s.map(i=>i[1].checked?parseInt(i[1].Credits):0).reduce((i,h)=>i+h,0);const d=[o("tr",{onClick:()=>this.handleRowClick(t),children:[o("td",{className:"heading-courses-td",children:[a("div",{className:"arrow "+(l?"down":"right")}),t]}),a("td",{className:"heading-credits-td",children:r+" / "+this.props.Categories[t].Credits}),a("td",{className:"heading-notes-td",children:this.props.Categories[t].Notes})]},"header"+t)];return l&&s.sort((i,h)=>i[1].Id.localeCompare(h[1].Id)).forEach(([i,h])=>d.push(a(oe,C({uniqueKey:"course"+i},h),"course"+i))),d}render(){let e=Object.entries(B(Object.entries(this.props.ClassDesc),s=>s[1].Fulfills));this.props.displayChoice==="EditGenEd"&&(e=e.filter(s=>s[0].includes("Gen Ed"))),this.props.displayChoice=="EditCS"&&(e=e.filter(s=>!s[0].includes("Gen Ed")));let t=[];return e.forEach(s=>{const l=this.renderItem(s);t=t.concat(l)}),o(X,{className:"listview-table",children:[o("thead",{children:[a("tr",{children:a("td",{colSpan:3,className:"heading-td",children:a("b",{children:"* Please select the classes you have taken or plan to take. *"})})}),o("tr",{children:[a("th",{className:"courses",children:"Courses"}),a("th",{className:"credits",children:"Credits"}),a("th",{className:"notes",children:"Notes"})]})]}),o("tbody",{children:[a("tr",{children:a("td",{colSpan:3,className:"alert-td",children:"* Course prerequisites change regularly. Students are responsible for consulting advisors and the class schedule in the student portal for prerequisite information.*"})}),t]})]})}}function he(n){let e=(n.planned?"planned-class":"")+(n.taken?"taken-class":"");return n.warnPrereqs&&(e="warn-class"),a(ee,{trigger:"click",rootClose:!0,placement:"auto",overlay:o(T,{id:"popover"+n.Name,children:[a(T.Header,{as:"h3",children:n.Name}),o(T.Body,{children:[n.warnPrereqs&&a("p",{className:"popover-warning",children:n.warnPrereqs.replace("dragged ","")}),a("p",{className:"popover-fulfills",children:!!n.cl&&n.cl.Fulfills}),!!n.cl&&n.cl.Desc]})]}),children:o("div",{style:{backgroundColor:n.bgCol,color:M(n.bgCol)?"#000000":"#ffffff"},className:"flow-box "+e+(n.isPreReq?" pre-reqs":""),onMouseEnter:n.enterFunc,onMouseLeave:n.leaveFunc,children:[o("div",{className:"flow-header",children:[e!==""&&a("div",{className:"flow-icon"}),a("div",{className:"flow-id",children:n.Name})]}),a("div",{className:"flow-credits",children:n.Credits}),!!n.cl&&o("div",{className:n.displayAll?"":"flow-desc",children:[a("div",{className:"flow-name",children:n.cl.Name}),a("div",{className:"flow-restriction",children:!!n.cl.Restriction&&"*"+n.cl.Restriction+"*"}),a("div",{className:"flow-notes",children:G(n.cl.Prereqs)})]})]})})}function ue(n){let[e,t]=g.exports.useState([]),[s,l]=g.exports.useState(!1);const r=c=>{let[u,m]=[0,0];for(let k of c)u+=parseInt(k.Credits),m+=k.taken?parseInt(k.cl.Credits):0;return[m,u]},d=(c,u)=>n.ColorOrder.indexOf(c)-n.ColorOrder.indexOf(u);let i=Object.entries(n.Colors).sort((c,u)=>d(c[0],u[0])).map(([c,u])=>a("div",{className:"flow-box-legend",style:{backgroundColor:u,color:M(u)?"#000000":"#ffffff"},children:c},"legend"+c)),h=Object.fromEntries(n.Semesters.map(c=>[c,[]]));h=C(C({},h),B(n.Classes,c=>c.Semester));let b=B(Object.entries(h),c=>c[0].split("-")[1]);return o(F.Fragment,{children:[o("div",{className:"expand",children:[a(j,{className:"class-checkbox",children:a(j.Checkbox,{"aria-label":"Expand All Flowchart Boxes",onChange:()=>l(!s)})}),"Expand All Flowchart Boxes"]}),o(H,{fluid:!0,id:"flowchart",children:[a(E,{children:a(te,{onDragEnd:n.onDragEnd,children:Object.entries(b).map(([c,u])=>a(I,{lg:3,sm:6,s:12,className:"yearcol",children:o(H,{children:[a(E,{children:o(I,{className:"year-header",children:["Year ",c]})}),a(E,{className:"sem-classes",children:u.sort((m,k)=>-L(m[0],k[0])).map(([m,k])=>a(se,{droppableId:m,children:v=>o(I,w(C({},v.droppableProps),{ref:v.innerRef,md:6,xs:6,className:"semcol",children:[a("div",{className:"sem-header",children:m.split("-")[0]}),a("div",{className:"sem-credits",children:r(k).join(" / ")+" credits taken"}),k.sort((S,P)=>d(S.Color,P.Color)).map((S,P)=>a(ae,{draggableId:S.index.toString(),index:P,children:p=>a("div",w(C(C({ref:p.innerRef},p.draggableProps),p.dragHandleProps),{children:a(he,w(C({},S),{isPreReq:e.includes(S.Name),enterFunc:()=>t(!!S.cl&&!!S.cl.Prereqs?S.cl.Prereqs:[]),leaveFunc:()=>t([]),displayAll:s}))}))},S.index.toString())),v.placeholder]}))},m))})]})},"colyear"+c))})}),a("div",{className:"flow-legend",children:i})]})]})}function Ce(n){const[e,t]=g.exports.useState(!1),[s,l]=g.exports.useState(""),[r,d]=g.exports.useState(""),[i,h]=g.exports.useState(""),[b,c]=g.exports.useState(!0),[u,m]=g.exports.useState([]),k=p=>{let A=p.filter(K=>!u.includes(K));m(A)};g.exports.useEffect(()=>{c(!(s.length>0&&r.length>0&&/^\d+$/.test(r)&&/^\s*[A-Z]{4}(.*)[\d]{4}\s*$/.test(s)&&i!==""&&u.length>0))});const v=()=>{t(!0)},S=()=>{t(!1),c(!0),l(""),d(""),h(""),m([])},P=()=>{S(),n.onSubmit({Id:s,Name:"Custom Class",Credits:r+" Credits",Desc:"",Fulfills:i,Prereqs:[]},u[0])};return o("div",{className:"custom-class-button",children:[a(y,{variant:"dark",onClick:v,children:"Add Custom Class"}),o(N,{show:e,onHide:S,children:[a(N.Header,{closeButton:!0,children:a(N.Title,{children:"Add Custom Class"})}),a(N.Body,{children:a(f,{children:o(f.Group,{className:"custom-class-form",children:[a(f.Label,{children:"Class Name:"}),a(f.Control,{id:"className",placeholder:"CSCI 1001",onChange:p=>{l(p.target.value.toUpperCase())}}),a(f.Label,{children:"Credit Amount:"}),a(f.Control,{id:"creditNum",placeholder:"3",onChange:p=>{d(p.target.value)}}),a(f.Label,{children:"Class Category:"}),o(f.Select,{value:i,onChange:p=>{h(p.target.value)},children:[a("option",{value:"",children:"Select a category"},"defaultoption"),n.CategoryOpts.map((p,A)=>a("option",{value:p,children:p},"option"+A))]}),a(f.Label,{className:"taken-label",children:"Status: "}),a(Y,{checked:u,handleButtonChange:k,uniqueKey:"Custom"})]})})}),o(N.Footer,{children:[a(y,{variant:"secondary",onClick:S,children:"Close"}),a(y,{disabled:b,variant:"dark",onClick:P,children:"Add Class"})]})]})]})}function me(n){return n.show?a(le,{variant:n.type,onClose:n.onClose,dismissible:!0,children:a("p",{children:n.show})}):null}function fe(n){const[e,t]=g.exports.useState(!1),[s,l]=g.exports.useState(""),[r,d]=g.exports.useState(""),[i,h]=g.exports.useState(!0);g.exports.useEffect(()=>{h(!(/^\s*\d+\s*$/.test(s)&&r!==""))});const b=()=>{t(!0)},c=()=>{t(!1),h(!0),l(""),d("")},u=()=>{c(),n.onSubmit(`${r}-${s}`)};return o("div",{className:"custom-class-button",children:[a(y,{variant:"dark",onClick:b,children:"Add Semester"}),o(N,{show:e,onHide:c,children:[a(N.Header,{closeButton:!0,children:a(N.Title,{children:"Add Semester"})}),a(N.Body,{children:a(f,{children:o(f.Group,{className:"custom-class-form",children:[a(f.Label,{children:"Semester:"}),o(f.Select,{value:r,onChange:m=>{d(m.target.value)},children:[a("option",{value:"",children:"Select a category"},"defaultoption"),a("option",{value:"Summer",children:"Summer"},"summeroption"),a("option",{value:"Fall",children:"Fall"},"falloption"),a("option",{value:"Spring",children:"Spring"},"springoption")]}),a(f.Label,{children:"Year:"}),a(f.Control,{id:"semesterYear",placeholder:"3",onChange:m=>{l(m.target.value)}})]})})}),o(N.Footer,{children:[a(y,{variant:"secondary",onClick:c,children:"Close"}),a(y,{disabled:i,variant:"dark",onClick:u,children:"Add Semester"})]})]})]})}class ge extends F.Component{constructor(e){super(e);x(this,"onAddSemesterSubmit",e=>{if(this.state.Semesters.includes(e)){this.setState({showAlert:["danger","Semester already exists. Check your flowchart."]});return}this.setState({showAlert:["success","Semester added to flowchart. Drag any classes into the new semester."],Semesters:[...this.state.Semesters,e]})});x(this,"onAddClassSubmit",(e,t)=>{let s=e.Id.match(/([A-Z]{4})(.*)([\d]{4})/);if(e.Id=s[1]+" "+s[3],t==="Taken"?this.markClassTaken(e.Id):this.markClassPlanned(e.Id),e.Id in this.state.ClassDesc){this.setState({showAlert:["danger",`Class already exists! It was added to your flowchart as a ${t} class.`]});return}let l=w(C({},this.state.ClassDesc),{[e.Id]:e});this.setState({ClassDesc:l,AddedClasses:[...this.state.AddedClasses,e.Id]})});x(this,"handleOnDragEnd",e=>{if(this.setState({showAlert:[null,null]}),!e.destination)return;let t=this.state.Classes.slice(),s=t[parseInt(e.draggableId)].Name;if(s in this.state.ClassDesc){let l=this.prereqsViolated(t,s,e.destination.droppableId);if(l!=null){this.setState({showAlert:["danger",l]});return}if("Restriction"in this.state.ClassDesc[s]){let r=this.state.ClassDesc[s].Restriction.split(" ")[0].toLowerCase();if(!e.destination.droppableId.toLowerCase().startsWith(r)){let d=`${s} cannot be dragged to a ${r} semester.`;this.setState({showAlert:["danger",d]});return}}}if(t[parseInt(e.draggableId)].Semester=e.destination.droppableId,"Coreqs"in this.state.ClassDesc[s]){let l=this.state.ClassDesc[s].Coreqs;t.forEach(r=>{l.includes(r.Name)&&(r.Semester=e.destination.droppableId)})}this.setState({Classes:t})});this.state={Display:"Flow",Colors:{},Categories:{},Semesters:[],Classes:[],ClassDesc:{},TakenClasses:[],PlannedClasses:[],displayAll:!1,showAlert:[null,null],AddedClasses:[]},this.fileUploader=F.createRef()}componentDidMount(){fetch("csreqs.json").then(e=>e.text()).then(e=>JSON.parse(e)).then(e=>this.setState(e)).catch(e=>console.error(`Couldn't read json file. The error was:
`,e))}menuClick(e){e===0?this.setState({Display:"Flow"}):e===1&!this.state.Display.startsWith("Edit")?this.setState({Display:"Edit"}):e===2?this.setState({Display:"EditGenEd"}):e==3&&this.setState({Display:"EditCS"})}onUploadFile(e){let t=new FileReader;t.onload=s=>{try{let l=JSON.parse(s.target.result),r=this.state.Classes.slice();r.forEach((i,h)=>i.Semester=l.DragNDropSems[h]);let d=C({},this.state.ClassDesc);l.AddedClasses.forEach(i=>d[i.Id]=i),this.setState({Semesters:l.Semesters,TakenClasses:l.TakenClasses,PlannedClasses:l.PlannedClasses,Classes:r,AddedClasses:l.AddedClasses.map(i=>i.Id),ClassDesc:d,showAlert:["success","Your file was uploaded successfully!"]})}catch(l){console.log(l),this.setState({showAlert:["error","Your file couldn't be uploaded because it had the wrong format."]})}},t.readAsText(e[0])}saveClick(){const e=JSON.stringify({Version:"1.0",Semesters:this.state.Semesters,TakenClasses:this.state.TakenClasses,PlannedClasses:this.state.PlannedClasses,DragNDropSems:this.state.Classes.map(s=>s.Semester),AddedClasses:this.state.AddedClasses.map(s=>this.state.ClassDesc[s])}),t=new Blob([e],{type:"application/json"});ne(t,"CUrPLAN")}calculateTotalHours(){let[e,t,s]=[0,0,0];return this.getFlowchartWithClasses().forEach(l=>{e+=parseInt(l.Credits),this.state.TakenClasses.includes(l.Name)&&(s+=parseInt(this.state.ClassDesc[l.Name].Credits)),this.state.PlannedClasses.includes(l.Name)&&(t+=parseInt(this.state.ClassDesc[l.Name].Credits))}),[s,t,e]}getCatForFlowchart(e,t){let s=e,l=0;for(;"Fallback"in this.state.Categories[s]&&this.state.Categories[s].Fallback.length>l&&t[s]>=this.state.Categories[s].Credits;)s=this.state.Categories[s].Fallback[l],l+=1;return t[s]>=this.state.Categories[s].Credits?null:s}addClassToFlowchart(e,t,s){const l=this.state.Categories[s].FC_Name,r=e.findIndex(d=>d.Name===l);r>=0&&(e[r].Name=t)}addPathToFlowchart(e,t){let s=this.state.ClassDesc[t],l=this.state.Categories[s.Fulfills].FC_Name,r=[];return s.Path.forEach(d=>{let i=e.findIndex(h=>h.Name===l||h.Type===l&&!s.Path.includes(h.Name));i>=0&&(r.push(w(C({},e[i]),{Credits:parseInt(e[i].Credits)-parseInt(this.state.ClassDesc[d].Credits)})),e[i].Type=e[i].Name,e[i].Name=d)}),r.reduce((d,i)=>"Credits"in d?w(C({},d),{Credits:parseInt(d.Credits)+parseInt(i.Credits)}):i,{})}getFlowchartWithClasses(){let e=JSON.parse(JSON.stringify(this.state.Classes)),t={},s={};return Object.keys(this.state.Categories).forEach(l=>s[l]=0),this.state.TakenClasses.concat(this.state.PlannedClasses).forEach(l=>{if(e.findIndex(r=>r.Name===l)===-1){let r=this.state.ClassDesc[l];if("Path"in r){let d=r.Path.map(i=>this.state.TakenClasses.includes(i)||this.state.PlannedClasses.includes(i)?parseInt(this.state.ClassDesc[i].Credits):0).reduce((i,h)=>i+h,0);if(d>s[r.Fulfills]){s[r.Fulfills]=d;let i=this.addPathToFlowchart(e,l,s);i.Credits?t[r.Fulfills]=w(C({},i),{Credits:`${i.Credits} hours`,warnPrereqs:`Taking the courses ${r.Path} means that you'll have to take additional courses to reach the credits needed for ${r.Fulfills}. Please talk to your counselor about how to get these credits.`,Name:i.Type||i.Name}):delete t[r.Fulfills]}}else{const d=this.getCatForFlowchart(r.Fulfills,s);d&&(this.addClassToFlowchart(e,l,d),s[d]+=parseInt(r.Credits,10))}}}),e.concat(Object.values(t).flat())}markClassTaken(e){this.state.TakenClasses.includes(e)?this.setState({TakenClasses:this.state.TakenClasses.filter(r=>r!==e)}):this.setState({TakenClasses:[...this.state.TakenClasses,e],PlannedClasses:this.state.PlannedClasses.filter(r=>r!==e)});let[t,s,l]=this.calculateTotalHours();t>=l-30&&this.setState({showAlert:["warning","You're within 30 hours of graduation. Please do a 30 hour check with your advisor."]})}markClassPlanned(e){this.state.PlannedClasses.includes(e)?this.setState({PlannedClasses:this.state.PlannedClasses.filter(t=>t!==e)}):this.setState({PlannedClasses:[...this.state.PlannedClasses,e],TakenClasses:this.state.TakenClasses.filter(t=>t!==e)})}displayEditView(){let e=Object.entries(this.state.ClassDesc).map(([t,s])=>w(C({},s),{Id:t,takenFunc:()=>this.markClassTaken(t),plannedFunc:()=>this.markClassPlanned(t),checked:this.state.TakenClasses.includes(t)?"Taken":this.state.PlannedClasses.includes(t)?"Planned":null}));return a(ce,{displayChoice:this.state.Display,ClassDesc:e,Categories:this.state.Categories})}prereqsViolated(e,t,s){if(t in this.state.ClassDesc){for(let l of e)if(this.state.ClassDesc[t].Prereqs.includes(l.Name)){if(L(l.Semester,s)!=1)return`${t} cannot be dragged before or in the same semester as ${l.Name}.`}else if(l.Name in this.state.ClassDesc&&this.state.ClassDesc[l.Name].Prereqs.includes(t)&&L(l.Semester,s)!=-1)return`${t} cannot be dragged after or in the same semester as ${l.Name}.`}return null}displayFlowChart(){let e=this.getFlowchartWithClasses(),t=e.map((s,l)=>w(C({},s),{cl:this.state.ClassDesc[s.Name],bgCol:this.state.Colors[s.Color],taken:this.state.TakenClasses.includes(s.Name),planned:this.state.PlannedClasses.includes(s.Name),warnPrereqs:s.warnPrereqs||this.prereqsViolated(e,s.Name,s.Semester),index:l}));return a(ue,{Semesters:this.state.Semesters,Classes:t,ColorOrder:this.state.ColorOrder,Colors:this.state.Colors,onDragEnd:this.handleOnDragEnd})}render(){let e;this.state.Display==="Flow"?e=this.displayFlowChart():e=this.displayEditView();let[t,s,l]=this.calculateTotalHours();return o("div",{className:"App",children:[a(me,{type:this.state.showAlert[0],show:this.state.showAlert[1],onClose:()=>this.setState({showAlert:[null,null]})}),o("div",{className:"sticky-top",children:[o(q,{variant:"dark",bg:"dark",children:[a(q.Brand,{children:"CUrPLAN"}),o(U,{children:[a(U.Link,{className:this.state.Display==="Flow"?"active":"inactive",onClick:()=>this.menuClick(0),children:"Flowchart"}),o(O,{className:this.state.Display.startsWith("Edit")?"active":"inactive",onClick:()=>this.menuClick(1),title:"Edit Classes",id:"basic-nav-dropdown",menuVariant:"dark",align:"end",children:[a(O.Item,{onClick:()=>this.menuClick(2),children:"General Ed Classes"}),a(O.Item,{onClick:()=>this.menuClick(3),children:"Computer Science BS"})]})]})]}),o(R,{children:[a(R,{variant:"success",now:t/l*100}),a(R,{variant:"warning",now:s/l*100})]})]}),o("div",{className:"header-options",children:[a("div",{className:"credit-count",children:`${t}/${l} taken credits`}),a("div",{className:"spacer"}),a(fe,{onSubmit:this.onAddSemesterSubmit}),a(Ce,{onSubmit:this.onAddClassSubmit,CategoryOpts:Object.keys(this.state.Categories).filter(r=>"FC_Name"in this.state.Categories[r])})]}),a("div",{className:"flow-warn",children:"*3000 & 4000 level CSCI courses are semester dependent. Courses may be offered more frequently as resources allow, but students cannot expect them to be offered off\u2010semester. Students should use the rotation shown on this flowchart as a guide for planning their upper level courses."}),e,o(q,{variant:"dark",bg:"dark",fixed:"bottom",children:[o("div",{children:[a("input",{ref:this.fileUploader,id:"uploadFileButton",accept:".json",type:"file",onClick:r=>{r.target.value=""},onChange:r=>this.onUploadFile(r.target.files)}),a(y,{variant:"outline-primary",id:"upload-button",onClick:()=>this.fileUploader.current.click(),children:"Upload"})]}),a("div",{className:"dropzone d-none d-sm-block",children:a(re,{onDrop:r=>this.onUploadFile(r),children:({getRootProps:r,getInputProps:d})=>a("section",{children:o("div",w(C({},r()),{children:[a("input",C({},d())),a("p",{children:"Drop your CUrPLAN .json file here"})]}))})})}),a(y,{variant:"outline-primary",id:"save-button",onClick:()=>this.saveClick(),children:"Save"}),a(y,{variant:"outline-primary",id:"print-button",onClick:()=>window.print(),children:"Print"})]})]})}}ie.render(a(F.StrictMode,{children:a(ge,{})}),document.getElementById("root"));
